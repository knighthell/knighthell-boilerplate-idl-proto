syntax = "proto3";

package place;

option go_package = "github.com/knighthell/knighthell-boilerplate-idl-proto/domain/place";

import "response-info.proto";
import "period.proto";
import "place.proto";

service PlaceService {
  rpc CreatePlaceList(CreatePlaceListRequest) returns (CreatePlaceListResponse);

  rpc ReadPlaceList(ReadPlaceListRequest) returns (ReadPlaceListResponse);

  rpc UpdatePlaceList(UpdatePlaceListRequest) returns (UpdatePlaceListResponse);

  rpc DeletePlaceList(DeletePlaceListRequest) returns (DeletePlaceListResponse);
}

enum PlaceServiceRequestEventType {
  CREATE_PLACE = 0;
  READ_PLACE = 1;
  UPDATE_PLACE = 2;
  DELETE_PLACE = 3;
}

enum PlaceServiceResponseEventType {
  PLACE_CREATED = 0;
  PLACE_READ = 1;
  PLACE_UPDATED = 2;
  PLACE_DELETED = 3;
}

message CreatePlaceListRequest {

  message Place {
    string name = 2; // 장소(Place)의 원래 이름
    double latitude = 3; // 장소(Place)의 위도
    double longitude = 4; // 장소(Place)의 경도
  }
  repeated Place places = 1;
}

message CreatePlaceListResponse {

  int32 totalCount = 1;
  int32 resultCount = 2;
  int32 requestedPageNumber = 3;
  int32 requestedLimitNumber = 4;

  repeated place.Place results = 5;
}

message ReadPlaceListRequest {

  message Place {
    string placeId = 1;
  }
  repeated Place places = 1;

  optional string keywords = 2; // 검색 InputText에 넣은 그대로의 값

  common.Period createdAtPeriod = 3;
  common.Period updatedAtPeriod = 4;
  common.Period deletedAtPeriod = 5;
  bool isIncludeDeletedPlace = 6;

  optional BoundSquare boundSquare = 7;
  optional BoundCircle boundCircle = 8;
}

message ReadPlaceListResponse {

  common.ResponseInfo responseInfo = 1;

  repeated place.Place places = 2;
}

message UpdatePlaceListRequest {

  message Place {
    string placeId = 1;

    optional string name = 2; // 장소(Place)의 원래 이름(No Localization Name)
    optional double latitude = 3; // 장소(Place)의 위도
    optional double longitude = 4; // 장소(Place)의 경도
  }
  repeated Place places = 1;
}

message UpdatePlaceListResponse {
  common.ResponseInfo responseInfo = 1;

  repeated place.Place results = 2;
}

message DeletePlaceListRequest {
  message Place {
    string placeId = 1;
  }

  repeated Place places = 1;
}

message DeletePlaceListResponse {
  common.ResponseInfo responseInfo = 1;

  repeated place.Place results = 2;
}

message BoundSquare {
  Wgs84Coordinates topRight = 1;
  Wgs84Coordinates bottomLeft = 2;
}

message BoundCircle {
  Wgs84Coordinates center = 1;
  int32 radiusMeter = 2;
}