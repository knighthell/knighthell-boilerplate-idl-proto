// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: place-update.service.proto

package place

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PlaceUpdateServiceClient is the client API for PlaceUpdateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PlaceUpdateServiceClient interface {
	UpdatePlaceList(ctx context.Context, in *UpdatePlaceListRequest, opts ...grpc.CallOption) (*UpdatePlaceListResponse, error)
}

type placeUpdateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlaceUpdateServiceClient(cc grpc.ClientConnInterface) PlaceUpdateServiceClient {
	return &placeUpdateServiceClient{cc}
}

func (c *placeUpdateServiceClient) UpdatePlaceList(ctx context.Context, in *UpdatePlaceListRequest, opts ...grpc.CallOption) (*UpdatePlaceListResponse, error) {
	out := new(UpdatePlaceListResponse)
	err := c.cc.Invoke(ctx, "/place.service.update.PlaceUpdateService/UpdatePlaceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlaceUpdateServiceServer is the server API for PlaceUpdateService service.
// All implementations must embed UnimplementedPlaceUpdateServiceServer
// for forward compatibility
type PlaceUpdateServiceServer interface {
	UpdatePlaceList(context.Context, *UpdatePlaceListRequest) (*UpdatePlaceListResponse, error)
	mustEmbedUnimplementedPlaceUpdateServiceServer()
}

// UnimplementedPlaceUpdateServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPlaceUpdateServiceServer struct {
}

func (UnimplementedPlaceUpdateServiceServer) UpdatePlaceList(context.Context, *UpdatePlaceListRequest) (*UpdatePlaceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePlaceList not implemented")
}
func (UnimplementedPlaceUpdateServiceServer) mustEmbedUnimplementedPlaceUpdateServiceServer() {}

// UnsafePlaceUpdateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PlaceUpdateServiceServer will
// result in compilation errors.
type UnsafePlaceUpdateServiceServer interface {
	mustEmbedUnimplementedPlaceUpdateServiceServer()
}

func RegisterPlaceUpdateServiceServer(s grpc.ServiceRegistrar, srv PlaceUpdateServiceServer) {
	s.RegisterService(&PlaceUpdateService_ServiceDesc, srv)
}

func _PlaceUpdateService_UpdatePlaceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePlaceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlaceUpdateServiceServer).UpdatePlaceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/place.service.update.PlaceUpdateService/UpdatePlaceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlaceUpdateServiceServer).UpdatePlaceList(ctx, req.(*UpdatePlaceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PlaceUpdateService_ServiceDesc is the grpc.ServiceDesc for PlaceUpdateService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PlaceUpdateService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "place.service.update.PlaceUpdateService",
	HandlerType: (*PlaceUpdateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdatePlaceList",
			Handler:    _PlaceUpdateService_UpdatePlaceList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "place-update.service.proto",
}
