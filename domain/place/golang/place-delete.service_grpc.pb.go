// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: place-delete.service.proto

package place

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PlaceDeleteServiceClient is the client API for PlaceDeleteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PlaceDeleteServiceClient interface {
	DeletePlaceList(ctx context.Context, in *DeletePlaceListRequest, opts ...grpc.CallOption) (*DeletePlaceListResponse, error)
}

type placeDeleteServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlaceDeleteServiceClient(cc grpc.ClientConnInterface) PlaceDeleteServiceClient {
	return &placeDeleteServiceClient{cc}
}

func (c *placeDeleteServiceClient) DeletePlaceList(ctx context.Context, in *DeletePlaceListRequest, opts ...grpc.CallOption) (*DeletePlaceListResponse, error) {
	out := new(DeletePlaceListResponse)
	err := c.cc.Invoke(ctx, "/place.service.delete.PlaceDeleteService/DeletePlaceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlaceDeleteServiceServer is the server API for PlaceDeleteService service.
// All implementations must embed UnimplementedPlaceDeleteServiceServer
// for forward compatibility
type PlaceDeleteServiceServer interface {
	DeletePlaceList(context.Context, *DeletePlaceListRequest) (*DeletePlaceListResponse, error)
	mustEmbedUnimplementedPlaceDeleteServiceServer()
}

// UnimplementedPlaceDeleteServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPlaceDeleteServiceServer struct {
}

func (UnimplementedPlaceDeleteServiceServer) DeletePlaceList(context.Context, *DeletePlaceListRequest) (*DeletePlaceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePlaceList not implemented")
}
func (UnimplementedPlaceDeleteServiceServer) mustEmbedUnimplementedPlaceDeleteServiceServer() {}

// UnsafePlaceDeleteServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PlaceDeleteServiceServer will
// result in compilation errors.
type UnsafePlaceDeleteServiceServer interface {
	mustEmbedUnimplementedPlaceDeleteServiceServer()
}

func RegisterPlaceDeleteServiceServer(s grpc.ServiceRegistrar, srv PlaceDeleteServiceServer) {
	s.RegisterService(&PlaceDeleteService_ServiceDesc, srv)
}

func _PlaceDeleteService_DeletePlaceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePlaceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlaceDeleteServiceServer).DeletePlaceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/place.service.delete.PlaceDeleteService/DeletePlaceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlaceDeleteServiceServer).DeletePlaceList(ctx, req.(*DeletePlaceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PlaceDeleteService_ServiceDesc is the grpc.ServiceDesc for PlaceDeleteService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PlaceDeleteService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "place.service.delete.PlaceDeleteService",
	HandlerType: (*PlaceDeleteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeletePlaceList",
			Handler:    _PlaceDeleteService_DeletePlaceList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "place-delete.service.proto",
}
