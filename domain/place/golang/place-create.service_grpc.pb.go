// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: place-create.service.proto

package place

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PlaceCreateServiceClient is the client API for PlaceCreateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PlaceCreateServiceClient interface {
	CreatePlaceList(ctx context.Context, in *CreatePlaceListRequest, opts ...grpc.CallOption) (*CreatePlaceListResponse, error)
}

type placeCreateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlaceCreateServiceClient(cc grpc.ClientConnInterface) PlaceCreateServiceClient {
	return &placeCreateServiceClient{cc}
}

func (c *placeCreateServiceClient) CreatePlaceList(ctx context.Context, in *CreatePlaceListRequest, opts ...grpc.CallOption) (*CreatePlaceListResponse, error) {
	out := new(CreatePlaceListResponse)
	err := c.cc.Invoke(ctx, "/place.service.create.PlaceCreateService/CreatePlaceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlaceCreateServiceServer is the server API for PlaceCreateService service.
// All implementations must embed UnimplementedPlaceCreateServiceServer
// for forward compatibility
type PlaceCreateServiceServer interface {
	CreatePlaceList(context.Context, *CreatePlaceListRequest) (*CreatePlaceListResponse, error)
	mustEmbedUnimplementedPlaceCreateServiceServer()
}

// UnimplementedPlaceCreateServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPlaceCreateServiceServer struct {
}

func (UnimplementedPlaceCreateServiceServer) CreatePlaceList(context.Context, *CreatePlaceListRequest) (*CreatePlaceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePlaceList not implemented")
}
func (UnimplementedPlaceCreateServiceServer) mustEmbedUnimplementedPlaceCreateServiceServer() {}

// UnsafePlaceCreateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PlaceCreateServiceServer will
// result in compilation errors.
type UnsafePlaceCreateServiceServer interface {
	mustEmbedUnimplementedPlaceCreateServiceServer()
}

func RegisterPlaceCreateServiceServer(s grpc.ServiceRegistrar, srv PlaceCreateServiceServer) {
	s.RegisterService(&PlaceCreateService_ServiceDesc, srv)
}

func _PlaceCreateService_CreatePlaceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePlaceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlaceCreateServiceServer).CreatePlaceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/place.service.create.PlaceCreateService/CreatePlaceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlaceCreateServiceServer).CreatePlaceList(ctx, req.(*CreatePlaceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PlaceCreateService_ServiceDesc is the grpc.ServiceDesc for PlaceCreateService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PlaceCreateService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "place.service.create.PlaceCreateService",
	HandlerType: (*PlaceCreateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePlaceList",
			Handler:    _PlaceCreateService_CreatePlaceList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "place-create.service.proto",
}
